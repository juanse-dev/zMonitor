
zMonitor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000084c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  0000084c  000008e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800068  00800068  000008e8  2**0
                  ALLOC
  3 .stab         00000c84  00000000  00000000  000008e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  0000156c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000120  00000000  00000000  00001728  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000dd8  00000000  00000000  00001848  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000569  00000000  00000000  00002620  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000098d  00000000  00000000  00002b89  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d0  00000000  00000000  00003518  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000319  00000000  00000000  000036e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000087e  00000000  00000000  00003a01  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000427f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 0f 01 	jmp	0x21e	; 0x21e <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e4       	ldi	r30, 0x4C	; 76
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a8 e6       	ldi	r26, 0x68	; 104
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ab 36       	cpi	r26, 0x6B	; 107
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <main>
  8a:	0c 94 24 04 	jmp	0x848	; 0x848 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <ADC_init>:
		
	}
}
void ADC_init(void) // Initialization of ADC
{
	ADMUX|=(1<<REFS0); // AVcc with external capacitor at AREF
  92:	3e 9a       	sbi	0x07, 6	; 7
	ADCSRA|=(1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
  94:	86 b1       	in	r24, 0x06	; 6
  96:	87 68       	ori	r24, 0x87	; 135
  98:	86 b9       	out	0x06, r24	; 6
	// Enable ADC and set Prescaler division factor as 128 (the fastest)
}
  9a:	08 95       	ret

0000009c <ADC_read>:

unsigned int ADC_read(unsigned char ch)
{
	ch= ch & 0b00000111; // channel must be b/w 0 to 7
  9c:	87 70       	andi	r24, 0x07	; 7
	DDRC&=~(1<<ch);//Habilito el canal como entrada
  9e:	94 b3       	in	r25, 0x14	; 20
  a0:	41 e0       	ldi	r20, 0x01	; 1
  a2:	50 e0       	ldi	r21, 0x00	; 0
  a4:	9a 01       	movw	r18, r20
  a6:	08 2e       	mov	r0, r24
  a8:	02 c0       	rjmp	.+4      	; 0xae <ADC_read+0x12>
  aa:	22 0f       	add	r18, r18
  ac:	33 1f       	adc	r19, r19
  ae:	0a 94       	dec	r0
  b0:	e2 f7       	brpl	.-8      	; 0xaa <ADC_read+0xe>
  b2:	20 95       	com	r18
  b4:	29 23       	and	r18, r25
  b6:	24 bb       	out	0x14, r18	; 20
	//PORTC|=(1<<ch); //Aseguro pull-up, es necesario?
	ADMUX |= ch; // selecting channel
  b8:	97 b1       	in	r25, 0x07	; 7
  ba:	89 2b       	or	r24, r25
  bc:	87 b9       	out	0x07, r24	; 7
	
	ADCSRA|=(1<<ADSC); // start conversion
  be:	36 9a       	sbi	0x06, 6	; 6
	while(!(ADCSRA & (1<<ADIF))); // waiting for ADIF, conversion complete
  c0:	34 9b       	sbis	0x06, 4	; 6
  c2:	fe cf       	rjmp	.-4      	; 0xc0 <ADC_read+0x24>
	ADCSRA|=(1<<ADIF); // clearing of ADIF, it is done by writing 1 to it
  c4:	34 9a       	sbi	0x06, 4	; 6
	
	return (ADC);
  c6:	84 b1       	in	r24, 0x04	; 4
  c8:	95 b1       	in	r25, 0x05	; 5
}
  ca:	08 95       	ret

000000cc <USART_Init>:


void USART_Init( unsigned int baud )
{
	/* Set baud rate */
	UBRRH |= (unsigned char)(baud>>8);
  cc:	20 b5       	in	r18, 0x20	; 32
  ce:	92 2b       	or	r25, r18
  d0:	90 bd       	out	0x20, r25	; 32
	UBRRL |= (unsigned char)baud;
  d2:	99 b1       	in	r25, 0x09	; 9
  d4:	89 2b       	or	r24, r25
  d6:	89 b9       	out	0x09, r24	; 9
	/* Enable  transmitter */
	UCSRB |= (1<<TXEN)|(1<<RXEN)|(1<<RXCIE);
  d8:	8a b1       	in	r24, 0x0a	; 10
  da:	88 69       	ori	r24, 0x98	; 152
  dc:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 1stop bit */
	UCSRC |= (1<<URSEL)|(3<<UCSZ0);
  de:	80 b5       	in	r24, 0x20	; 32
  e0:	86 68       	ori	r24, 0x86	; 134
  e2:	80 bd       	out	0x20, r24	; 32
	UCSRA|=(1<<U2X);
  e4:	59 9a       	sbi	0x0b, 1	; 11
	sei();
  e6:	78 94       	sei
}
  e8:	08 95       	ret

000000ea <USART_Transmit>:

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSRA & (1<<UDRE)) )
  ea:	5d 9b       	sbis	0x0b, 5	; 11
  ec:	fe cf       	rjmp	.-4      	; 0xea <USART_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR = data;
  ee:	8c b9       	out	0x0c, r24	; 12
}
  f0:	08 95       	ret

000000f2 <USART_Check>:

unsigned int USART_Check( void )
{
	int recibio=0;
	/* Wait for data to be received */
	if( (UCSRA & (1<<RXC)) )
  f2:	8b b1       	in	r24, 0x0b	; 11
	{
		recibio=1;
	}

	/* Get and return received data from buffer */
	return recibio;
  f4:	99 27       	eor	r25, r25
  f6:	87 fd       	sbrc	r24, 7
  f8:	90 95       	com	r25
}
  fa:	89 2f       	mov	r24, r25
  fc:	88 1f       	adc	r24, r24
  fe:	88 27       	eor	r24, r24
 100:	88 1f       	adc	r24, r24
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	08 95       	ret

00000106 <USART_Receive>:

unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSRA & (1<<RXC)) )
 106:	5f 9b       	sbis	0x0b, 7	; 11
 108:	fe cf       	rjmp	.-4      	; 0x106 <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR;
 10a:	8c b1       	in	r24, 0x0c	; 12
}
 10c:	08 95       	ret

0000010e <enviarDatos>:


void enviarDatos(unsigned int sector){
 10e:	cf 92       	push	r12
 110:	df 92       	push	r13
 112:	ef 92       	push	r14
 114:	ff 92       	push	r15
 116:	1f 93       	push	r17
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
 11c:	cd b7       	in	r28, 0x3d	; 61
 11e:	de b7       	in	r29, 0x3e	; 62
 120:	64 97       	sbiw	r28, 0x14	; 20
 122:	0f b6       	in	r0, 0x3f	; 63
 124:	f8 94       	cli
 126:	de bf       	out	0x3e, r29	; 62
 128:	0f be       	out	0x3f, r0	; 63
 12a:	cd bf       	out	0x3d, r28	; 61
	char mensaje[20];
	sprintf( mensaje, "(%d,%d)", contador, sector );
 12c:	2d b7       	in	r18, 0x3d	; 61
 12e:	3e b7       	in	r19, 0x3e	; 62
 130:	28 50       	subi	r18, 0x08	; 8
 132:	30 40       	sbci	r19, 0x00	; 0
 134:	0f b6       	in	r0, 0x3f	; 63
 136:	f8 94       	cli
 138:	3e bf       	out	0x3e, r19	; 62
 13a:	0f be       	out	0x3f, r0	; 63
 13c:	2d bf       	out	0x3d, r18	; 61
 13e:	ed b7       	in	r30, 0x3d	; 61
 140:	fe b7       	in	r31, 0x3e	; 62
 142:	31 96       	adiw	r30, 0x01	; 1
 144:	6e 01       	movw	r12, r28
 146:	08 94       	sec
 148:	c1 1c       	adc	r12, r1
 14a:	d1 1c       	adc	r13, r1
 14c:	ad b7       	in	r26, 0x3d	; 61
 14e:	be b7       	in	r27, 0x3e	; 62
 150:	12 96       	adiw	r26, 0x02	; 2
 152:	dc 92       	st	X, r13
 154:	ce 92       	st	-X, r12
 156:	11 97       	sbiw	r26, 0x01	; 1
 158:	20 e6       	ldi	r18, 0x60	; 96
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	33 83       	std	Z+3, r19	; 0x03
 15e:	22 83       	std	Z+2, r18	; 0x02
 160:	20 91 68 00 	lds	r18, 0x0068
 164:	30 91 69 00 	lds	r19, 0x0069
 168:	35 83       	std	Z+5, r19	; 0x05
 16a:	24 83       	std	Z+4, r18	; 0x04
 16c:	97 83       	std	Z+7, r25	; 0x07
 16e:	86 83       	std	Z+6, r24	; 0x06
 170:	0e 94 4d 01 	call	0x29a	; 0x29a <sprintf>
	/* Get and return received data from buffer */
	return UDR;
}


void enviarDatos(unsigned int sector){
 174:	0f 2e       	mov	r0, r31
 176:	f5 e1       	ldi	r31, 0x15	; 21
 178:	ef 2e       	mov	r14, r31
 17a:	ff 24       	eor	r15, r15
 17c:	f0 2d       	mov	r31, r0
 17e:	ec 0e       	add	r14, r28
 180:	fd 1e       	adc	r15, r29
 182:	ed b7       	in	r30, 0x3d	; 61
 184:	fe b7       	in	r31, 0x3e	; 62
 186:	38 96       	adiw	r30, 0x08	; 8
 188:	0f b6       	in	r0, 0x3f	; 63
 18a:	f8 94       	cli
 18c:	fe bf       	out	0x3e, r31	; 62
 18e:	0f be       	out	0x3f, r0	; 63
 190:	ed bf       	out	0x3d, r30	; 61
	char mensaje[20];
	sprintf( mensaje, "(%d,%d)", contador, sector );
	for(int i=0;i<sizeof(mensaje);i++){
		unsigned char dato= mensaje[i];
 192:	d6 01       	movw	r26, r12
 194:	1d 91       	ld	r17, X+
 196:	6d 01       	movw	r12, r26
		USART_Transmit( dato );
 198:	81 2f       	mov	r24, r17
 19a:	0e 94 75 00 	call	0xea	; 0xea <USART_Transmit>
		if(dato==0x29)break;
 19e:	19 32       	cpi	r17, 0x29	; 41
 1a0:	49 f0       	breq	.+18     	; 0x1b4 <enviarDatos+0xa6>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a2:	ef e4       	ldi	r30, 0x4F	; 79
 1a4:	f3 ec       	ldi	r31, 0xC3	; 195
 1a6:	31 97       	sbiw	r30, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <enviarDatos+0x98>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <enviarDatos+0x9e>
 1ac:	00 00       	nop


void enviarDatos(unsigned int sector){
	char mensaje[20];
	sprintf( mensaje, "(%d,%d)", contador, sector );
	for(int i=0;i<sizeof(mensaje);i++){
 1ae:	ce 14       	cp	r12, r14
 1b0:	df 04       	cpc	r13, r15
 1b2:	79 f7       	brne	.-34     	; 0x192 <enviarDatos+0x84>
		unsigned char dato= mensaje[i];
		USART_Transmit( dato );
		if(dato==0x29)break;
		_delay_ms(200);
	}	
	contador++;
 1b4:	80 91 68 00 	lds	r24, 0x0068
 1b8:	90 91 69 00 	lds	r25, 0x0069
 1bc:	01 96       	adiw	r24, 0x01	; 1
 1be:	90 93 69 00 	sts	0x0069, r25
 1c2:	80 93 68 00 	sts	0x0068, r24
}
 1c6:	64 96       	adiw	r28, 0x14	; 20
 1c8:	0f b6       	in	r0, 0x3f	; 63
 1ca:	f8 94       	cli
 1cc:	de bf       	out	0x3e, r29	; 62
 1ce:	0f be       	out	0x3f, r0	; 63
 1d0:	cd bf       	out	0x3d, r28	; 61
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	1f 91       	pop	r17
 1d8:	ff 90       	pop	r15
 1da:	ef 90       	pop	r14
 1dc:	df 90       	pop	r13
 1de:	cf 90       	pop	r12
 1e0:	08 95       	ret

000001e2 <main>:
void enviarDatos(unsigned int sector);
unsigned char x= 0x00;
int contador=0;

int main(void){
	DDRB=0xFF;
 1e2:	8f ef       	ldi	r24, 0xFF	; 255
 1e4:	87 bb       	out	0x17, r24	; 23
	DDRD=0x03;
 1e6:	83 e0       	ldi	r24, 0x03	; 3
 1e8:	81 bb       	out	0x11, r24	; 17
	USART_Init( MYUBRR );
 1ea:	8c e0       	ldi	r24, 0x0C	; 12
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	0e 94 66 00 	call	0xcc	; 0xcc <USART_Init>
	ADC_init();
 1f2:	0e 94 49 00 	call	0x92	; 0x92 <ADC_init>
	sei();
 1f6:	78 94       	sei
	unsigned int value;
	
	for(;;)
	{
		
		if(x==0xFF){
 1f8:	80 91 6a 00 	lds	r24, 0x006A
 1fc:	8f 3f       	cpi	r24, 0xFF	; 255
 1fe:	59 f4       	brne	.+22     	; 0x216 <main+0x34>
			value=ADC_read(CHANNEL);//Mide el canal definido por la constante
 200:	80 e0       	ldi	r24, 0x00	; 0
 202:	0e 94 4e 00 	call	0x9c	; 0x9c <ADC_read>
			enviarDatos(value);
 206:	0e 94 87 00 	call	0x10e	; 0x10e <enviarDatos>
 20a:	8f e4       	ldi	r24, 0x4F	; 79
 20c:	93 ec       	ldi	r25, 0xC3	; 195
 20e:	01 97       	sbiw	r24, 0x01	; 1
 210:	f1 f7       	brne	.-4      	; 0x20e <main+0x2c>
 212:	00 c0       	rjmp	.+0      	; 0x214 <main+0x32>
 214:	00 00       	nop
			_delay_ms(200);
		}
		PORTB=x;
 216:	80 91 6a 00 	lds	r24, 0x006A
 21a:	88 bb       	out	0x18, r24	; 24
		
	}
 21c:	ed cf       	rjmp	.-38     	; 0x1f8 <main+0x16>

0000021e <__vector_13>:
	}	
	contador++;
}


SIGNAL (SIG_UART_RECV) { // USART RX interrupt
 21e:	1f 92       	push	r1
 220:	0f 92       	push	r0
 222:	0f b6       	in	r0, 0x3f	; 63
 224:	0f 92       	push	r0
 226:	11 24       	eor	r1, r1
 228:	2f 93       	push	r18
 22a:	3f 93       	push	r19
 22c:	4f 93       	push	r20
 22e:	5f 93       	push	r21
 230:	6f 93       	push	r22
 232:	7f 93       	push	r23
 234:	8f 93       	push	r24
 236:	9f 93       	push	r25
 238:	af 93       	push	r26
 23a:	bf 93       	push	r27
 23c:	ef 93       	push	r30
 23e:	ff 93       	push	r31
	unsigned char h= USART_Receive();
 240:	0e 94 83 00 	call	0x106	; 0x106 <USART_Receive>
	if( h ==0x4F )
 244:	8f 34       	cpi	r24, 0x4F	; 79
 246:	41 f4       	brne	.+16     	; 0x258 <__vector_13+0x3a>
	{
		h= USART_Receive();
 248:	0e 94 83 00 	call	0x106	; 0x106 <USART_Receive>
		if(h==0x4B)
 24c:	8b 34       	cpi	r24, 0x4B	; 75
 24e:	a1 f4       	brne	.+40     	; 0x278 <__vector_13+0x5a>
		{
			x=0xFF;
 250:	8f ef       	ldi	r24, 0xFF	; 255
 252:	80 93 6a 00 	sts	0x006A, r24
 256:	10 c0       	rjmp	.+32     	; 0x278 <__vector_13+0x5a>
		}
	}
	else if(h==0x45)
 258:	85 34       	cpi	r24, 0x45	; 69
 25a:	71 f4       	brne	.+28     	; 0x278 <__vector_13+0x5a>
	{
		h= USART_Receive();
 25c:	0e 94 83 00 	call	0x106	; 0x106 <USART_Receive>
		if(h==0x4E)
 260:	8e 34       	cpi	r24, 0x4E	; 78
 262:	51 f4       	brne	.+20     	; 0x278 <__vector_13+0x5a>
		{
			h= USART_Receive();
 264:	0e 94 83 00 	call	0x106	; 0x106 <USART_Receive>
			if(h==0x44)
 268:	84 34       	cpi	r24, 0x44	; 68
 26a:	31 f4       	brne	.+12     	; 0x278 <__vector_13+0x5a>
			{
				contador=0;
 26c:	10 92 69 00 	sts	0x0069, r1
 270:	10 92 68 00 	sts	0x0068, r1
				x=0x00;
 274:	10 92 6a 00 	sts	0x006A, r1
			}
		}
	}
 278:	ff 91       	pop	r31
 27a:	ef 91       	pop	r30
 27c:	bf 91       	pop	r27
 27e:	af 91       	pop	r26
 280:	9f 91       	pop	r25
 282:	8f 91       	pop	r24
 284:	7f 91       	pop	r23
 286:	6f 91       	pop	r22
 288:	5f 91       	pop	r21
 28a:	4f 91       	pop	r20
 28c:	3f 91       	pop	r19
 28e:	2f 91       	pop	r18
 290:	0f 90       	pop	r0
 292:	0f be       	out	0x3f, r0	; 63
 294:	0f 90       	pop	r0
 296:	1f 90       	pop	r1
 298:	18 95       	reti

0000029a <sprintf>:
 29a:	ae e0       	ldi	r26, 0x0E	; 14
 29c:	b0 e0       	ldi	r27, 0x00	; 0
 29e:	e3 e5       	ldi	r30, 0x53	; 83
 2a0:	f1 e0       	ldi	r31, 0x01	; 1
 2a2:	0c 94 fb 03 	jmp	0x7f6	; 0x7f6 <__prologue_saves__+0x1c>
 2a6:	0d 89       	ldd	r16, Y+21	; 0x15
 2a8:	1e 89       	ldd	r17, Y+22	; 0x16
 2aa:	86 e0       	ldi	r24, 0x06	; 6
 2ac:	8c 83       	std	Y+4, r24	; 0x04
 2ae:	1a 83       	std	Y+2, r17	; 0x02
 2b0:	09 83       	std	Y+1, r16	; 0x01
 2b2:	8f ef       	ldi	r24, 0xFF	; 255
 2b4:	9f e7       	ldi	r25, 0x7F	; 127
 2b6:	9e 83       	std	Y+6, r25	; 0x06
 2b8:	8d 83       	std	Y+5, r24	; 0x05
 2ba:	ae 01       	movw	r20, r28
 2bc:	47 5e       	subi	r20, 0xE7	; 231
 2be:	5f 4f       	sbci	r21, 0xFF	; 255
 2c0:	ce 01       	movw	r24, r28
 2c2:	01 96       	adiw	r24, 0x01	; 1
 2c4:	6f 89       	ldd	r22, Y+23	; 0x17
 2c6:	78 8d       	ldd	r23, Y+24	; 0x18
 2c8:	0e 94 6f 01 	call	0x2de	; 0x2de <vfprintf>
 2cc:	ef 81       	ldd	r30, Y+7	; 0x07
 2ce:	f8 85       	ldd	r31, Y+8	; 0x08
 2d0:	e0 0f       	add	r30, r16
 2d2:	f1 1f       	adc	r31, r17
 2d4:	10 82       	st	Z, r1
 2d6:	2e 96       	adiw	r28, 0x0e	; 14
 2d8:	e4 e0       	ldi	r30, 0x04	; 4
 2da:	0c 94 17 04 	jmp	0x82e	; 0x82e <__epilogue_restores__+0x1c>

000002de <vfprintf>:
 2de:	ad e0       	ldi	r26, 0x0D	; 13
 2e0:	b0 e0       	ldi	r27, 0x00	; 0
 2e2:	e5 e7       	ldi	r30, 0x75	; 117
 2e4:	f1 e0       	ldi	r31, 0x01	; 1
 2e6:	0c 94 ed 03 	jmp	0x7da	; 0x7da <__prologue_saves__>
 2ea:	3c 01       	movw	r6, r24
 2ec:	7d 87       	std	Y+13, r23	; 0x0d
 2ee:	6c 87       	std	Y+12, r22	; 0x0c
 2f0:	5a 01       	movw	r10, r20
 2f2:	fc 01       	movw	r30, r24
 2f4:	17 82       	std	Z+7, r1	; 0x07
 2f6:	16 82       	std	Z+6, r1	; 0x06
 2f8:	83 81       	ldd	r24, Z+3	; 0x03
 2fa:	81 ff       	sbrs	r24, 1
 2fc:	c8 c1       	rjmp	.+912    	; 0x68e <vfprintf+0x3b0>
 2fe:	2e 01       	movw	r4, r28
 300:	08 94       	sec
 302:	41 1c       	adc	r4, r1
 304:	51 1c       	adc	r5, r1
 306:	f3 01       	movw	r30, r6
 308:	93 81       	ldd	r25, Z+3	; 0x03
 30a:	ec 85       	ldd	r30, Y+12	; 0x0c
 30c:	fd 85       	ldd	r31, Y+13	; 0x0d
 30e:	93 fd       	sbrc	r25, 3
 310:	85 91       	lpm	r24, Z+
 312:	93 ff       	sbrs	r25, 3
 314:	81 91       	ld	r24, Z+
 316:	fd 87       	std	Y+13, r31	; 0x0d
 318:	ec 87       	std	Y+12, r30	; 0x0c
 31a:	88 23       	and	r24, r24
 31c:	09 f4       	brne	.+2      	; 0x320 <vfprintf+0x42>
 31e:	b3 c1       	rjmp	.+870    	; 0x686 <vfprintf+0x3a8>
 320:	85 32       	cpi	r24, 0x25	; 37
 322:	41 f4       	brne	.+16     	; 0x334 <vfprintf+0x56>
 324:	93 fd       	sbrc	r25, 3
 326:	85 91       	lpm	r24, Z+
 328:	93 ff       	sbrs	r25, 3
 32a:	81 91       	ld	r24, Z+
 32c:	fd 87       	std	Y+13, r31	; 0x0d
 32e:	ec 87       	std	Y+12, r30	; 0x0c
 330:	85 32       	cpi	r24, 0x25	; 37
 332:	29 f4       	brne	.+10     	; 0x33e <vfprintf+0x60>
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	b3 01       	movw	r22, r6
 338:	0e 94 63 03 	call	0x6c6	; 0x6c6 <fputc>
 33c:	e4 cf       	rjmp	.-56     	; 0x306 <vfprintf+0x28>
 33e:	ff 24       	eor	r15, r15
 340:	ee 24       	eor	r14, r14
 342:	10 e0       	ldi	r17, 0x00	; 0
 344:	10 32       	cpi	r17, 0x20	; 32
 346:	b0 f4       	brcc	.+44     	; 0x374 <vfprintf+0x96>
 348:	8b 32       	cpi	r24, 0x2B	; 43
 34a:	69 f0       	breq	.+26     	; 0x366 <vfprintf+0x88>
 34c:	8c 32       	cpi	r24, 0x2C	; 44
 34e:	28 f4       	brcc	.+10     	; 0x35a <vfprintf+0x7c>
 350:	80 32       	cpi	r24, 0x20	; 32
 352:	51 f0       	breq	.+20     	; 0x368 <vfprintf+0x8a>
 354:	83 32       	cpi	r24, 0x23	; 35
 356:	71 f4       	brne	.+28     	; 0x374 <vfprintf+0x96>
 358:	0b c0       	rjmp	.+22     	; 0x370 <vfprintf+0x92>
 35a:	8d 32       	cpi	r24, 0x2D	; 45
 35c:	39 f0       	breq	.+14     	; 0x36c <vfprintf+0x8e>
 35e:	80 33       	cpi	r24, 0x30	; 48
 360:	49 f4       	brne	.+18     	; 0x374 <vfprintf+0x96>
 362:	11 60       	ori	r17, 0x01	; 1
 364:	2c c0       	rjmp	.+88     	; 0x3be <vfprintf+0xe0>
 366:	12 60       	ori	r17, 0x02	; 2
 368:	14 60       	ori	r17, 0x04	; 4
 36a:	29 c0       	rjmp	.+82     	; 0x3be <vfprintf+0xe0>
 36c:	18 60       	ori	r17, 0x08	; 8
 36e:	27 c0       	rjmp	.+78     	; 0x3be <vfprintf+0xe0>
 370:	10 61       	ori	r17, 0x10	; 16
 372:	25 c0       	rjmp	.+74     	; 0x3be <vfprintf+0xe0>
 374:	17 fd       	sbrc	r17, 7
 376:	2e c0       	rjmp	.+92     	; 0x3d4 <vfprintf+0xf6>
 378:	28 2f       	mov	r18, r24
 37a:	20 53       	subi	r18, 0x30	; 48
 37c:	2a 30       	cpi	r18, 0x0A	; 10
 37e:	98 f4       	brcc	.+38     	; 0x3a6 <vfprintf+0xc8>
 380:	16 ff       	sbrs	r17, 6
 382:	08 c0       	rjmp	.+16     	; 0x394 <vfprintf+0xb6>
 384:	8f 2d       	mov	r24, r15
 386:	88 0f       	add	r24, r24
 388:	f8 2e       	mov	r15, r24
 38a:	ff 0c       	add	r15, r15
 38c:	ff 0c       	add	r15, r15
 38e:	f8 0e       	add	r15, r24
 390:	f2 0e       	add	r15, r18
 392:	15 c0       	rjmp	.+42     	; 0x3be <vfprintf+0xe0>
 394:	8e 2d       	mov	r24, r14
 396:	88 0f       	add	r24, r24
 398:	e8 2e       	mov	r14, r24
 39a:	ee 0c       	add	r14, r14
 39c:	ee 0c       	add	r14, r14
 39e:	e8 0e       	add	r14, r24
 3a0:	e2 0e       	add	r14, r18
 3a2:	10 62       	ori	r17, 0x20	; 32
 3a4:	0c c0       	rjmp	.+24     	; 0x3be <vfprintf+0xe0>
 3a6:	8e 32       	cpi	r24, 0x2E	; 46
 3a8:	21 f4       	brne	.+8      	; 0x3b2 <vfprintf+0xd4>
 3aa:	16 fd       	sbrc	r17, 6
 3ac:	6c c1       	rjmp	.+728    	; 0x686 <vfprintf+0x3a8>
 3ae:	10 64       	ori	r17, 0x40	; 64
 3b0:	06 c0       	rjmp	.+12     	; 0x3be <vfprintf+0xe0>
 3b2:	8c 36       	cpi	r24, 0x6C	; 108
 3b4:	11 f4       	brne	.+4      	; 0x3ba <vfprintf+0xdc>
 3b6:	10 68       	ori	r17, 0x80	; 128
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <vfprintf+0xe0>
 3ba:	88 36       	cpi	r24, 0x68	; 104
 3bc:	59 f4       	brne	.+22     	; 0x3d4 <vfprintf+0xf6>
 3be:	ec 85       	ldd	r30, Y+12	; 0x0c
 3c0:	fd 85       	ldd	r31, Y+13	; 0x0d
 3c2:	93 fd       	sbrc	r25, 3
 3c4:	85 91       	lpm	r24, Z+
 3c6:	93 ff       	sbrs	r25, 3
 3c8:	81 91       	ld	r24, Z+
 3ca:	fd 87       	std	Y+13, r31	; 0x0d
 3cc:	ec 87       	std	Y+12, r30	; 0x0c
 3ce:	88 23       	and	r24, r24
 3d0:	09 f0       	breq	.+2      	; 0x3d4 <vfprintf+0xf6>
 3d2:	b8 cf       	rjmp	.-144    	; 0x344 <vfprintf+0x66>
 3d4:	98 2f       	mov	r25, r24
 3d6:	95 54       	subi	r25, 0x45	; 69
 3d8:	93 30       	cpi	r25, 0x03	; 3
 3da:	18 f0       	brcs	.+6      	; 0x3e2 <vfprintf+0x104>
 3dc:	90 52       	subi	r25, 0x20	; 32
 3de:	93 30       	cpi	r25, 0x03	; 3
 3e0:	38 f4       	brcc	.+14     	; 0x3f0 <vfprintf+0x112>
 3e2:	24 e0       	ldi	r18, 0x04	; 4
 3e4:	30 e0       	ldi	r19, 0x00	; 0
 3e6:	a2 0e       	add	r10, r18
 3e8:	b3 1e       	adc	r11, r19
 3ea:	3f e3       	ldi	r19, 0x3F	; 63
 3ec:	39 83       	std	Y+1, r19	; 0x01
 3ee:	0f c0       	rjmp	.+30     	; 0x40e <vfprintf+0x130>
 3f0:	83 36       	cpi	r24, 0x63	; 99
 3f2:	31 f0       	breq	.+12     	; 0x400 <vfprintf+0x122>
 3f4:	83 37       	cpi	r24, 0x73	; 115
 3f6:	81 f0       	breq	.+32     	; 0x418 <vfprintf+0x13a>
 3f8:	83 35       	cpi	r24, 0x53	; 83
 3fa:	09 f0       	breq	.+2      	; 0x3fe <vfprintf+0x120>
 3fc:	5a c0       	rjmp	.+180    	; 0x4b2 <vfprintf+0x1d4>
 3fe:	22 c0       	rjmp	.+68     	; 0x444 <vfprintf+0x166>
 400:	f5 01       	movw	r30, r10
 402:	80 81       	ld	r24, Z
 404:	89 83       	std	Y+1, r24	; 0x01
 406:	22 e0       	ldi	r18, 0x02	; 2
 408:	30 e0       	ldi	r19, 0x00	; 0
 40a:	a2 0e       	add	r10, r18
 40c:	b3 1e       	adc	r11, r19
 40e:	21 e0       	ldi	r18, 0x01	; 1
 410:	c2 2e       	mov	r12, r18
 412:	d1 2c       	mov	r13, r1
 414:	42 01       	movw	r8, r4
 416:	14 c0       	rjmp	.+40     	; 0x440 <vfprintf+0x162>
 418:	92 e0       	ldi	r25, 0x02	; 2
 41a:	29 2e       	mov	r2, r25
 41c:	31 2c       	mov	r3, r1
 41e:	2a 0c       	add	r2, r10
 420:	3b 1c       	adc	r3, r11
 422:	f5 01       	movw	r30, r10
 424:	80 80       	ld	r8, Z
 426:	91 80       	ldd	r9, Z+1	; 0x01
 428:	16 ff       	sbrs	r17, 6
 42a:	03 c0       	rjmp	.+6      	; 0x432 <vfprintf+0x154>
 42c:	6f 2d       	mov	r22, r15
 42e:	70 e0       	ldi	r23, 0x00	; 0
 430:	02 c0       	rjmp	.+4      	; 0x436 <vfprintf+0x158>
 432:	6f ef       	ldi	r22, 0xFF	; 255
 434:	7f ef       	ldi	r23, 0xFF	; 255
 436:	c4 01       	movw	r24, r8
 438:	0e 94 58 03 	call	0x6b0	; 0x6b0 <strnlen>
 43c:	6c 01       	movw	r12, r24
 43e:	51 01       	movw	r10, r2
 440:	1f 77       	andi	r17, 0x7F	; 127
 442:	15 c0       	rjmp	.+42     	; 0x46e <vfprintf+0x190>
 444:	82 e0       	ldi	r24, 0x02	; 2
 446:	28 2e       	mov	r2, r24
 448:	31 2c       	mov	r3, r1
 44a:	2a 0c       	add	r2, r10
 44c:	3b 1c       	adc	r3, r11
 44e:	f5 01       	movw	r30, r10
 450:	80 80       	ld	r8, Z
 452:	91 80       	ldd	r9, Z+1	; 0x01
 454:	16 ff       	sbrs	r17, 6
 456:	03 c0       	rjmp	.+6      	; 0x45e <vfprintf+0x180>
 458:	6f 2d       	mov	r22, r15
 45a:	70 e0       	ldi	r23, 0x00	; 0
 45c:	02 c0       	rjmp	.+4      	; 0x462 <vfprintf+0x184>
 45e:	6f ef       	ldi	r22, 0xFF	; 255
 460:	7f ef       	ldi	r23, 0xFF	; 255
 462:	c4 01       	movw	r24, r8
 464:	0e 94 4d 03 	call	0x69a	; 0x69a <strnlen_P>
 468:	6c 01       	movw	r12, r24
 46a:	10 68       	ori	r17, 0x80	; 128
 46c:	51 01       	movw	r10, r2
 46e:	13 fd       	sbrc	r17, 3
 470:	1c c0       	rjmp	.+56     	; 0x4aa <vfprintf+0x1cc>
 472:	06 c0       	rjmp	.+12     	; 0x480 <vfprintf+0x1a2>
 474:	80 e2       	ldi	r24, 0x20	; 32
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	b3 01       	movw	r22, r6
 47a:	0e 94 63 03 	call	0x6c6	; 0x6c6 <fputc>
 47e:	ea 94       	dec	r14
 480:	8e 2d       	mov	r24, r14
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	c8 16       	cp	r12, r24
 486:	d9 06       	cpc	r13, r25
 488:	a8 f3       	brcs	.-22     	; 0x474 <vfprintf+0x196>
 48a:	0f c0       	rjmp	.+30     	; 0x4aa <vfprintf+0x1cc>
 48c:	f4 01       	movw	r30, r8
 48e:	17 fd       	sbrc	r17, 7
 490:	85 91       	lpm	r24, Z+
 492:	17 ff       	sbrs	r17, 7
 494:	81 91       	ld	r24, Z+
 496:	4f 01       	movw	r8, r30
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	b3 01       	movw	r22, r6
 49c:	0e 94 63 03 	call	0x6c6	; 0x6c6 <fputc>
 4a0:	e1 10       	cpse	r14, r1
 4a2:	ea 94       	dec	r14
 4a4:	08 94       	sec
 4a6:	c1 08       	sbc	r12, r1
 4a8:	d1 08       	sbc	r13, r1
 4aa:	c1 14       	cp	r12, r1
 4ac:	d1 04       	cpc	r13, r1
 4ae:	71 f7       	brne	.-36     	; 0x48c <vfprintf+0x1ae>
 4b0:	e7 c0       	rjmp	.+462    	; 0x680 <vfprintf+0x3a2>
 4b2:	84 36       	cpi	r24, 0x64	; 100
 4b4:	11 f0       	breq	.+4      	; 0x4ba <vfprintf+0x1dc>
 4b6:	89 36       	cpi	r24, 0x69	; 105
 4b8:	51 f5       	brne	.+84     	; 0x50e <vfprintf+0x230>
 4ba:	f5 01       	movw	r30, r10
 4bc:	17 ff       	sbrs	r17, 7
 4be:	07 c0       	rjmp	.+14     	; 0x4ce <vfprintf+0x1f0>
 4c0:	80 81       	ld	r24, Z
 4c2:	91 81       	ldd	r25, Z+1	; 0x01
 4c4:	a2 81       	ldd	r26, Z+2	; 0x02
 4c6:	b3 81       	ldd	r27, Z+3	; 0x03
 4c8:	24 e0       	ldi	r18, 0x04	; 4
 4ca:	30 e0       	ldi	r19, 0x00	; 0
 4cc:	08 c0       	rjmp	.+16     	; 0x4de <vfprintf+0x200>
 4ce:	80 81       	ld	r24, Z
 4d0:	91 81       	ldd	r25, Z+1	; 0x01
 4d2:	aa 27       	eor	r26, r26
 4d4:	97 fd       	sbrc	r25, 7
 4d6:	a0 95       	com	r26
 4d8:	ba 2f       	mov	r27, r26
 4da:	22 e0       	ldi	r18, 0x02	; 2
 4dc:	30 e0       	ldi	r19, 0x00	; 0
 4de:	a2 0e       	add	r10, r18
 4e0:	b3 1e       	adc	r11, r19
 4e2:	01 2f       	mov	r16, r17
 4e4:	0f 76       	andi	r16, 0x6F	; 111
 4e6:	b7 ff       	sbrs	r27, 7
 4e8:	08 c0       	rjmp	.+16     	; 0x4fa <vfprintf+0x21c>
 4ea:	b0 95       	com	r27
 4ec:	a0 95       	com	r26
 4ee:	90 95       	com	r25
 4f0:	81 95       	neg	r24
 4f2:	9f 4f       	sbci	r25, 0xFF	; 255
 4f4:	af 4f       	sbci	r26, 0xFF	; 255
 4f6:	bf 4f       	sbci	r27, 0xFF	; 255
 4f8:	00 68       	ori	r16, 0x80	; 128
 4fa:	bc 01       	movw	r22, r24
 4fc:	cd 01       	movw	r24, r26
 4fe:	a2 01       	movw	r20, r4
 500:	2a e0       	ldi	r18, 0x0A	; 10
 502:	30 e0       	ldi	r19, 0x00	; 0
 504:	0e 94 8f 03 	call	0x71e	; 0x71e <__ultoa_invert>
 508:	d8 2e       	mov	r13, r24
 50a:	d4 18       	sub	r13, r4
 50c:	3f c0       	rjmp	.+126    	; 0x58c <vfprintf+0x2ae>
 50e:	85 37       	cpi	r24, 0x75	; 117
 510:	21 f4       	brne	.+8      	; 0x51a <vfprintf+0x23c>
 512:	1f 7e       	andi	r17, 0xEF	; 239
 514:	2a e0       	ldi	r18, 0x0A	; 10
 516:	30 e0       	ldi	r19, 0x00	; 0
 518:	20 c0       	rjmp	.+64     	; 0x55a <vfprintf+0x27c>
 51a:	19 7f       	andi	r17, 0xF9	; 249
 51c:	8f 36       	cpi	r24, 0x6F	; 111
 51e:	a9 f0       	breq	.+42     	; 0x54a <vfprintf+0x26c>
 520:	80 37       	cpi	r24, 0x70	; 112
 522:	20 f4       	brcc	.+8      	; 0x52c <vfprintf+0x24e>
 524:	88 35       	cpi	r24, 0x58	; 88
 526:	09 f0       	breq	.+2      	; 0x52a <vfprintf+0x24c>
 528:	ae c0       	rjmp	.+348    	; 0x686 <vfprintf+0x3a8>
 52a:	0b c0       	rjmp	.+22     	; 0x542 <vfprintf+0x264>
 52c:	80 37       	cpi	r24, 0x70	; 112
 52e:	21 f0       	breq	.+8      	; 0x538 <vfprintf+0x25a>
 530:	88 37       	cpi	r24, 0x78	; 120
 532:	09 f0       	breq	.+2      	; 0x536 <vfprintf+0x258>
 534:	a8 c0       	rjmp	.+336    	; 0x686 <vfprintf+0x3a8>
 536:	01 c0       	rjmp	.+2      	; 0x53a <vfprintf+0x25c>
 538:	10 61       	ori	r17, 0x10	; 16
 53a:	14 ff       	sbrs	r17, 4
 53c:	09 c0       	rjmp	.+18     	; 0x550 <vfprintf+0x272>
 53e:	14 60       	ori	r17, 0x04	; 4
 540:	07 c0       	rjmp	.+14     	; 0x550 <vfprintf+0x272>
 542:	14 ff       	sbrs	r17, 4
 544:	08 c0       	rjmp	.+16     	; 0x556 <vfprintf+0x278>
 546:	16 60       	ori	r17, 0x06	; 6
 548:	06 c0       	rjmp	.+12     	; 0x556 <vfprintf+0x278>
 54a:	28 e0       	ldi	r18, 0x08	; 8
 54c:	30 e0       	ldi	r19, 0x00	; 0
 54e:	05 c0       	rjmp	.+10     	; 0x55a <vfprintf+0x27c>
 550:	20 e1       	ldi	r18, 0x10	; 16
 552:	30 e0       	ldi	r19, 0x00	; 0
 554:	02 c0       	rjmp	.+4      	; 0x55a <vfprintf+0x27c>
 556:	20 e1       	ldi	r18, 0x10	; 16
 558:	32 e0       	ldi	r19, 0x02	; 2
 55a:	f5 01       	movw	r30, r10
 55c:	17 ff       	sbrs	r17, 7
 55e:	07 c0       	rjmp	.+14     	; 0x56e <vfprintf+0x290>
 560:	60 81       	ld	r22, Z
 562:	71 81       	ldd	r23, Z+1	; 0x01
 564:	82 81       	ldd	r24, Z+2	; 0x02
 566:	93 81       	ldd	r25, Z+3	; 0x03
 568:	44 e0       	ldi	r20, 0x04	; 4
 56a:	50 e0       	ldi	r21, 0x00	; 0
 56c:	06 c0       	rjmp	.+12     	; 0x57a <vfprintf+0x29c>
 56e:	60 81       	ld	r22, Z
 570:	71 81       	ldd	r23, Z+1	; 0x01
 572:	80 e0       	ldi	r24, 0x00	; 0
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	42 e0       	ldi	r20, 0x02	; 2
 578:	50 e0       	ldi	r21, 0x00	; 0
 57a:	a4 0e       	add	r10, r20
 57c:	b5 1e       	adc	r11, r21
 57e:	a2 01       	movw	r20, r4
 580:	0e 94 8f 03 	call	0x71e	; 0x71e <__ultoa_invert>
 584:	d8 2e       	mov	r13, r24
 586:	d4 18       	sub	r13, r4
 588:	01 2f       	mov	r16, r17
 58a:	0f 77       	andi	r16, 0x7F	; 127
 58c:	06 ff       	sbrs	r16, 6
 58e:	09 c0       	rjmp	.+18     	; 0x5a2 <vfprintf+0x2c4>
 590:	0e 7f       	andi	r16, 0xFE	; 254
 592:	df 14       	cp	r13, r15
 594:	30 f4       	brcc	.+12     	; 0x5a2 <vfprintf+0x2c4>
 596:	04 ff       	sbrs	r16, 4
 598:	06 c0       	rjmp	.+12     	; 0x5a6 <vfprintf+0x2c8>
 59a:	02 fd       	sbrc	r16, 2
 59c:	04 c0       	rjmp	.+8      	; 0x5a6 <vfprintf+0x2c8>
 59e:	0f 7e       	andi	r16, 0xEF	; 239
 5a0:	02 c0       	rjmp	.+4      	; 0x5a6 <vfprintf+0x2c8>
 5a2:	1d 2d       	mov	r17, r13
 5a4:	01 c0       	rjmp	.+2      	; 0x5a8 <vfprintf+0x2ca>
 5a6:	1f 2d       	mov	r17, r15
 5a8:	80 2f       	mov	r24, r16
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	04 ff       	sbrs	r16, 4
 5ae:	0c c0       	rjmp	.+24     	; 0x5c8 <vfprintf+0x2ea>
 5b0:	fe 01       	movw	r30, r28
 5b2:	ed 0d       	add	r30, r13
 5b4:	f1 1d       	adc	r31, r1
 5b6:	20 81       	ld	r18, Z
 5b8:	20 33       	cpi	r18, 0x30	; 48
 5ba:	11 f4       	brne	.+4      	; 0x5c0 <vfprintf+0x2e2>
 5bc:	09 7e       	andi	r16, 0xE9	; 233
 5be:	09 c0       	rjmp	.+18     	; 0x5d2 <vfprintf+0x2f4>
 5c0:	02 ff       	sbrs	r16, 2
 5c2:	06 c0       	rjmp	.+12     	; 0x5d0 <vfprintf+0x2f2>
 5c4:	1e 5f       	subi	r17, 0xFE	; 254
 5c6:	05 c0       	rjmp	.+10     	; 0x5d2 <vfprintf+0x2f4>
 5c8:	86 78       	andi	r24, 0x86	; 134
 5ca:	90 70       	andi	r25, 0x00	; 0
 5cc:	00 97       	sbiw	r24, 0x00	; 0
 5ce:	09 f0       	breq	.+2      	; 0x5d2 <vfprintf+0x2f4>
 5d0:	1f 5f       	subi	r17, 0xFF	; 255
 5d2:	80 2e       	mov	r8, r16
 5d4:	99 24       	eor	r9, r9
 5d6:	03 fd       	sbrc	r16, 3
 5d8:	12 c0       	rjmp	.+36     	; 0x5fe <vfprintf+0x320>
 5da:	00 ff       	sbrs	r16, 0
 5dc:	0d c0       	rjmp	.+26     	; 0x5f8 <vfprintf+0x31a>
 5de:	fd 2c       	mov	r15, r13
 5e0:	1e 15       	cp	r17, r14
 5e2:	50 f4       	brcc	.+20     	; 0x5f8 <vfprintf+0x31a>
 5e4:	fe 0c       	add	r15, r14
 5e6:	f1 1a       	sub	r15, r17
 5e8:	1e 2d       	mov	r17, r14
 5ea:	06 c0       	rjmp	.+12     	; 0x5f8 <vfprintf+0x31a>
 5ec:	80 e2       	ldi	r24, 0x20	; 32
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	b3 01       	movw	r22, r6
 5f2:	0e 94 63 03 	call	0x6c6	; 0x6c6 <fputc>
 5f6:	1f 5f       	subi	r17, 0xFF	; 255
 5f8:	1e 15       	cp	r17, r14
 5fa:	c0 f3       	brcs	.-16     	; 0x5ec <vfprintf+0x30e>
 5fc:	04 c0       	rjmp	.+8      	; 0x606 <vfprintf+0x328>
 5fe:	1e 15       	cp	r17, r14
 600:	10 f4       	brcc	.+4      	; 0x606 <vfprintf+0x328>
 602:	e1 1a       	sub	r14, r17
 604:	01 c0       	rjmp	.+2      	; 0x608 <vfprintf+0x32a>
 606:	ee 24       	eor	r14, r14
 608:	84 fe       	sbrs	r8, 4
 60a:	0f c0       	rjmp	.+30     	; 0x62a <vfprintf+0x34c>
 60c:	80 e3       	ldi	r24, 0x30	; 48
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	b3 01       	movw	r22, r6
 612:	0e 94 63 03 	call	0x6c6	; 0x6c6 <fputc>
 616:	82 fe       	sbrs	r8, 2
 618:	1f c0       	rjmp	.+62     	; 0x658 <vfprintf+0x37a>
 61a:	81 fe       	sbrs	r8, 1
 61c:	03 c0       	rjmp	.+6      	; 0x624 <vfprintf+0x346>
 61e:	88 e5       	ldi	r24, 0x58	; 88
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	10 c0       	rjmp	.+32     	; 0x644 <vfprintf+0x366>
 624:	88 e7       	ldi	r24, 0x78	; 120
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	0d c0       	rjmp	.+26     	; 0x644 <vfprintf+0x366>
 62a:	c4 01       	movw	r24, r8
 62c:	86 78       	andi	r24, 0x86	; 134
 62e:	90 70       	andi	r25, 0x00	; 0
 630:	00 97       	sbiw	r24, 0x00	; 0
 632:	91 f0       	breq	.+36     	; 0x658 <vfprintf+0x37a>
 634:	81 fc       	sbrc	r8, 1
 636:	02 c0       	rjmp	.+4      	; 0x63c <vfprintf+0x35e>
 638:	80 e2       	ldi	r24, 0x20	; 32
 63a:	01 c0       	rjmp	.+2      	; 0x63e <vfprintf+0x360>
 63c:	8b e2       	ldi	r24, 0x2B	; 43
 63e:	07 fd       	sbrc	r16, 7
 640:	8d e2       	ldi	r24, 0x2D	; 45
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	b3 01       	movw	r22, r6
 646:	0e 94 63 03 	call	0x6c6	; 0x6c6 <fputc>
 64a:	06 c0       	rjmp	.+12     	; 0x658 <vfprintf+0x37a>
 64c:	80 e3       	ldi	r24, 0x30	; 48
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	b3 01       	movw	r22, r6
 652:	0e 94 63 03 	call	0x6c6	; 0x6c6 <fputc>
 656:	fa 94       	dec	r15
 658:	df 14       	cp	r13, r15
 65a:	c0 f3       	brcs	.-16     	; 0x64c <vfprintf+0x36e>
 65c:	da 94       	dec	r13
 65e:	f2 01       	movw	r30, r4
 660:	ed 0d       	add	r30, r13
 662:	f1 1d       	adc	r31, r1
 664:	80 81       	ld	r24, Z
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	b3 01       	movw	r22, r6
 66a:	0e 94 63 03 	call	0x6c6	; 0x6c6 <fputc>
 66e:	dd 20       	and	r13, r13
 670:	a9 f7       	brne	.-22     	; 0x65c <vfprintf+0x37e>
 672:	06 c0       	rjmp	.+12     	; 0x680 <vfprintf+0x3a2>
 674:	80 e2       	ldi	r24, 0x20	; 32
 676:	90 e0       	ldi	r25, 0x00	; 0
 678:	b3 01       	movw	r22, r6
 67a:	0e 94 63 03 	call	0x6c6	; 0x6c6 <fputc>
 67e:	ea 94       	dec	r14
 680:	ee 20       	and	r14, r14
 682:	c1 f7       	brne	.-16     	; 0x674 <vfprintf+0x396>
 684:	40 ce       	rjmp	.-896    	; 0x306 <vfprintf+0x28>
 686:	f3 01       	movw	r30, r6
 688:	86 81       	ldd	r24, Z+6	; 0x06
 68a:	97 81       	ldd	r25, Z+7	; 0x07
 68c:	02 c0       	rjmp	.+4      	; 0x692 <vfprintf+0x3b4>
 68e:	8f ef       	ldi	r24, 0xFF	; 255
 690:	9f ef       	ldi	r25, 0xFF	; 255
 692:	2d 96       	adiw	r28, 0x0d	; 13
 694:	e2 e1       	ldi	r30, 0x12	; 18
 696:	0c 94 09 04 	jmp	0x812	; 0x812 <__epilogue_restores__>

0000069a <strnlen_P>:
 69a:	fc 01       	movw	r30, r24
 69c:	05 90       	lpm	r0, Z+
 69e:	61 50       	subi	r22, 0x01	; 1
 6a0:	70 40       	sbci	r23, 0x00	; 0
 6a2:	01 10       	cpse	r0, r1
 6a4:	d8 f7       	brcc	.-10     	; 0x69c <strnlen_P+0x2>
 6a6:	80 95       	com	r24
 6a8:	90 95       	com	r25
 6aa:	8e 0f       	add	r24, r30
 6ac:	9f 1f       	adc	r25, r31
 6ae:	08 95       	ret

000006b0 <strnlen>:
 6b0:	fc 01       	movw	r30, r24
 6b2:	61 50       	subi	r22, 0x01	; 1
 6b4:	70 40       	sbci	r23, 0x00	; 0
 6b6:	01 90       	ld	r0, Z+
 6b8:	01 10       	cpse	r0, r1
 6ba:	d8 f7       	brcc	.-10     	; 0x6b2 <strnlen+0x2>
 6bc:	80 95       	com	r24
 6be:	90 95       	com	r25
 6c0:	8e 0f       	add	r24, r30
 6c2:	9f 1f       	adc	r25, r31
 6c4:	08 95       	ret

000006c6 <fputc>:
 6c6:	0f 93       	push	r16
 6c8:	1f 93       	push	r17
 6ca:	cf 93       	push	r28
 6cc:	df 93       	push	r29
 6ce:	8c 01       	movw	r16, r24
 6d0:	eb 01       	movw	r28, r22
 6d2:	8b 81       	ldd	r24, Y+3	; 0x03
 6d4:	81 ff       	sbrs	r24, 1
 6d6:	1b c0       	rjmp	.+54     	; 0x70e <fputc+0x48>
 6d8:	82 ff       	sbrs	r24, 2
 6da:	0d c0       	rjmp	.+26     	; 0x6f6 <fputc+0x30>
 6dc:	2e 81       	ldd	r18, Y+6	; 0x06
 6de:	3f 81       	ldd	r19, Y+7	; 0x07
 6e0:	8c 81       	ldd	r24, Y+4	; 0x04
 6e2:	9d 81       	ldd	r25, Y+5	; 0x05
 6e4:	28 17       	cp	r18, r24
 6e6:	39 07       	cpc	r19, r25
 6e8:	64 f4       	brge	.+24     	; 0x702 <fputc+0x3c>
 6ea:	e8 81       	ld	r30, Y
 6ec:	f9 81       	ldd	r31, Y+1	; 0x01
 6ee:	01 93       	st	Z+, r16
 6f0:	f9 83       	std	Y+1, r31	; 0x01
 6f2:	e8 83       	st	Y, r30
 6f4:	06 c0       	rjmp	.+12     	; 0x702 <fputc+0x3c>
 6f6:	e8 85       	ldd	r30, Y+8	; 0x08
 6f8:	f9 85       	ldd	r31, Y+9	; 0x09
 6fa:	80 2f       	mov	r24, r16
 6fc:	09 95       	icall
 6fe:	00 97       	sbiw	r24, 0x00	; 0
 700:	31 f4       	brne	.+12     	; 0x70e <fputc+0x48>
 702:	8e 81       	ldd	r24, Y+6	; 0x06
 704:	9f 81       	ldd	r25, Y+7	; 0x07
 706:	01 96       	adiw	r24, 0x01	; 1
 708:	9f 83       	std	Y+7, r25	; 0x07
 70a:	8e 83       	std	Y+6, r24	; 0x06
 70c:	02 c0       	rjmp	.+4      	; 0x712 <fputc+0x4c>
 70e:	0f ef       	ldi	r16, 0xFF	; 255
 710:	1f ef       	ldi	r17, 0xFF	; 255
 712:	c8 01       	movw	r24, r16
 714:	df 91       	pop	r29
 716:	cf 91       	pop	r28
 718:	1f 91       	pop	r17
 71a:	0f 91       	pop	r16
 71c:	08 95       	ret

0000071e <__ultoa_invert>:
 71e:	fa 01       	movw	r30, r20
 720:	aa 27       	eor	r26, r26
 722:	28 30       	cpi	r18, 0x08	; 8
 724:	51 f1       	breq	.+84     	; 0x77a <__ultoa_invert+0x5c>
 726:	20 31       	cpi	r18, 0x10	; 16
 728:	81 f1       	breq	.+96     	; 0x78a <__ultoa_invert+0x6c>
 72a:	e8 94       	clt
 72c:	6f 93       	push	r22
 72e:	6e 7f       	andi	r22, 0xFE	; 254
 730:	6e 5f       	subi	r22, 0xFE	; 254
 732:	7f 4f       	sbci	r23, 0xFF	; 255
 734:	8f 4f       	sbci	r24, 0xFF	; 255
 736:	9f 4f       	sbci	r25, 0xFF	; 255
 738:	af 4f       	sbci	r26, 0xFF	; 255
 73a:	b1 e0       	ldi	r27, 0x01	; 1
 73c:	3e d0       	rcall	.+124    	; 0x7ba <__ultoa_invert+0x9c>
 73e:	b4 e0       	ldi	r27, 0x04	; 4
 740:	3c d0       	rcall	.+120    	; 0x7ba <__ultoa_invert+0x9c>
 742:	67 0f       	add	r22, r23
 744:	78 1f       	adc	r23, r24
 746:	89 1f       	adc	r24, r25
 748:	9a 1f       	adc	r25, r26
 74a:	a1 1d       	adc	r26, r1
 74c:	68 0f       	add	r22, r24
 74e:	79 1f       	adc	r23, r25
 750:	8a 1f       	adc	r24, r26
 752:	91 1d       	adc	r25, r1
 754:	a1 1d       	adc	r26, r1
 756:	6a 0f       	add	r22, r26
 758:	71 1d       	adc	r23, r1
 75a:	81 1d       	adc	r24, r1
 75c:	91 1d       	adc	r25, r1
 75e:	a1 1d       	adc	r26, r1
 760:	20 d0       	rcall	.+64     	; 0x7a2 <__ultoa_invert+0x84>
 762:	09 f4       	brne	.+2      	; 0x766 <__ultoa_invert+0x48>
 764:	68 94       	set
 766:	3f 91       	pop	r19
 768:	2a e0       	ldi	r18, 0x0A	; 10
 76a:	26 9f       	mul	r18, r22
 76c:	11 24       	eor	r1, r1
 76e:	30 19       	sub	r19, r0
 770:	30 5d       	subi	r19, 0xD0	; 208
 772:	31 93       	st	Z+, r19
 774:	de f6       	brtc	.-74     	; 0x72c <__ultoa_invert+0xe>
 776:	cf 01       	movw	r24, r30
 778:	08 95       	ret
 77a:	46 2f       	mov	r20, r22
 77c:	47 70       	andi	r20, 0x07	; 7
 77e:	40 5d       	subi	r20, 0xD0	; 208
 780:	41 93       	st	Z+, r20
 782:	b3 e0       	ldi	r27, 0x03	; 3
 784:	0f d0       	rcall	.+30     	; 0x7a4 <__ultoa_invert+0x86>
 786:	c9 f7       	brne	.-14     	; 0x77a <__ultoa_invert+0x5c>
 788:	f6 cf       	rjmp	.-20     	; 0x776 <__ultoa_invert+0x58>
 78a:	46 2f       	mov	r20, r22
 78c:	4f 70       	andi	r20, 0x0F	; 15
 78e:	40 5d       	subi	r20, 0xD0	; 208
 790:	4a 33       	cpi	r20, 0x3A	; 58
 792:	18 f0       	brcs	.+6      	; 0x79a <__ultoa_invert+0x7c>
 794:	49 5d       	subi	r20, 0xD9	; 217
 796:	31 fd       	sbrc	r19, 1
 798:	40 52       	subi	r20, 0x20	; 32
 79a:	41 93       	st	Z+, r20
 79c:	02 d0       	rcall	.+4      	; 0x7a2 <__ultoa_invert+0x84>
 79e:	a9 f7       	brne	.-22     	; 0x78a <__ultoa_invert+0x6c>
 7a0:	ea cf       	rjmp	.-44     	; 0x776 <__ultoa_invert+0x58>
 7a2:	b4 e0       	ldi	r27, 0x04	; 4
 7a4:	a6 95       	lsr	r26
 7a6:	97 95       	ror	r25
 7a8:	87 95       	ror	r24
 7aa:	77 95       	ror	r23
 7ac:	67 95       	ror	r22
 7ae:	ba 95       	dec	r27
 7b0:	c9 f7       	brne	.-14     	; 0x7a4 <__ultoa_invert+0x86>
 7b2:	00 97       	sbiw	r24, 0x00	; 0
 7b4:	61 05       	cpc	r22, r1
 7b6:	71 05       	cpc	r23, r1
 7b8:	08 95       	ret
 7ba:	9b 01       	movw	r18, r22
 7bc:	ac 01       	movw	r20, r24
 7be:	0a 2e       	mov	r0, r26
 7c0:	06 94       	lsr	r0
 7c2:	57 95       	ror	r21
 7c4:	47 95       	ror	r20
 7c6:	37 95       	ror	r19
 7c8:	27 95       	ror	r18
 7ca:	ba 95       	dec	r27
 7cc:	c9 f7       	brne	.-14     	; 0x7c0 <__ultoa_invert+0xa2>
 7ce:	62 0f       	add	r22, r18
 7d0:	73 1f       	adc	r23, r19
 7d2:	84 1f       	adc	r24, r20
 7d4:	95 1f       	adc	r25, r21
 7d6:	a0 1d       	adc	r26, r0
 7d8:	08 95       	ret

000007da <__prologue_saves__>:
 7da:	2f 92       	push	r2
 7dc:	3f 92       	push	r3
 7de:	4f 92       	push	r4
 7e0:	5f 92       	push	r5
 7e2:	6f 92       	push	r6
 7e4:	7f 92       	push	r7
 7e6:	8f 92       	push	r8
 7e8:	9f 92       	push	r9
 7ea:	af 92       	push	r10
 7ec:	bf 92       	push	r11
 7ee:	cf 92       	push	r12
 7f0:	df 92       	push	r13
 7f2:	ef 92       	push	r14
 7f4:	ff 92       	push	r15
 7f6:	0f 93       	push	r16
 7f8:	1f 93       	push	r17
 7fa:	cf 93       	push	r28
 7fc:	df 93       	push	r29
 7fe:	cd b7       	in	r28, 0x3d	; 61
 800:	de b7       	in	r29, 0x3e	; 62
 802:	ca 1b       	sub	r28, r26
 804:	db 0b       	sbc	r29, r27
 806:	0f b6       	in	r0, 0x3f	; 63
 808:	f8 94       	cli
 80a:	de bf       	out	0x3e, r29	; 62
 80c:	0f be       	out	0x3f, r0	; 63
 80e:	cd bf       	out	0x3d, r28	; 61
 810:	09 94       	ijmp

00000812 <__epilogue_restores__>:
 812:	2a 88       	ldd	r2, Y+18	; 0x12
 814:	39 88       	ldd	r3, Y+17	; 0x11
 816:	48 88       	ldd	r4, Y+16	; 0x10
 818:	5f 84       	ldd	r5, Y+15	; 0x0f
 81a:	6e 84       	ldd	r6, Y+14	; 0x0e
 81c:	7d 84       	ldd	r7, Y+13	; 0x0d
 81e:	8c 84       	ldd	r8, Y+12	; 0x0c
 820:	9b 84       	ldd	r9, Y+11	; 0x0b
 822:	aa 84       	ldd	r10, Y+10	; 0x0a
 824:	b9 84       	ldd	r11, Y+9	; 0x09
 826:	c8 84       	ldd	r12, Y+8	; 0x08
 828:	df 80       	ldd	r13, Y+7	; 0x07
 82a:	ee 80       	ldd	r14, Y+6	; 0x06
 82c:	fd 80       	ldd	r15, Y+5	; 0x05
 82e:	0c 81       	ldd	r16, Y+4	; 0x04
 830:	1b 81       	ldd	r17, Y+3	; 0x03
 832:	aa 81       	ldd	r26, Y+2	; 0x02
 834:	b9 81       	ldd	r27, Y+1	; 0x01
 836:	ce 0f       	add	r28, r30
 838:	d1 1d       	adc	r29, r1
 83a:	0f b6       	in	r0, 0x3f	; 63
 83c:	f8 94       	cli
 83e:	de bf       	out	0x3e, r29	; 62
 840:	0f be       	out	0x3f, r0	; 63
 842:	cd bf       	out	0x3d, r28	; 61
 844:	ed 01       	movw	r28, r26
 846:	08 95       	ret

00000848 <_exit>:
 848:	f8 94       	cli

0000084a <__stop_program>:
 84a:	ff cf       	rjmp	.-2      	; 0x84a <__stop_program>
